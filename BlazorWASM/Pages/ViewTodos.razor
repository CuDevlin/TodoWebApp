@page "/ViewTodos"
@using global::Shared.Models
@using HttpClients.ClientInterfaces
@using UIComponents
@using global::Shared.DTOs
@inject ITodoService TodoService;
@inject NavigationManager navMgr
<h3>ViewTodos</h3>

<div>
    <button @onclick="LoadTodos">Load</button>
</div>

@if (todos == null)
{
}
else if (!todos.Any())
{
    <p>No Todos to display</p>
}
else
{
<table class="table">
    <thead>
    <tr>
        <th>Todo ID</th>
        <th>Owner ID</th>
        <th>Title</th>
        <th>Completed?</th>
        <th>Edit</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in todos)
    {
        <tr>
            <td>@item.Id</td>
            <td>@item.Owner.UserName</td>
            <td>@item.Title</td>
            <td>
                <FancyCheckBox IsCompleted="@item.IsCompleted" OnChange="@((status) => CompleteTodo(item, status))"/>
            </td>
            <td>
                <img src="icons/edit.gif" class="funnel" @onclick="@(() => navMgr.NavigateTo($"/EditTodo/{item.Id}"))"/>
            </td>
        </tr>
    }
    </tbody>
</table>
}
@if (!string.IsNullOrEmpty(msg))
{
    <label style="color: red">@msg</label>
}

@code {
    private IEnumerable<Todo>? todos;
    private string msg = "";

    private async Task LoadTodos()
    {
        try
        {
            todos = await TodoService.GetAsync(null, null, null, null);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }
    
    private async Task CompleteTodo(Todo item, bool status)
    {
        TodoUpdateDto dto = new(item.Id)
        {
            IsCompleted = status
        };
    
        try
        {
            await TodoService.UpdateAsync(dto);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }
}